NAS
NAS <- data$steps["steps" == "NA",]
data <- read.csv("activity.csv", colClasses = c("interval"="numeric"))
NAS <- data$steps["steps" == "NA",]
str(data)
nas <- data[data$steps == "NA", ]
nas
str(nas)
head(nas)
tail(nas)
nas[500:550,]
data <- read.csv("activity.csv", colClasses = c("interval"="numeric"))
nas <- !complete.case(data)
?completecases
?complete.cases
nas <- data[!complete.cases(data), ]
str(nas)
nrows(nas)
nrow(nas)
##part1
data <- read.csv("activity.csv", colClasses = c("interval"="numeric"))
splitdata <- split(data, data$date)
sums <- na.omit(lapply(splitdata, function(x) sum(x[,1])))
sums <- data.frame(
date = rep(names(sums), lapply(sums, length)),
totalsteps = unlist(sums))
qplot(as.Date(date), totalsteps, stat="identity", data = sums,
geom = "bar", xlab = "Date", ylab = "Total Steps")
mean(sums$totalsteps, na.rm = T)
median(sums$totalsteps, na.rm = T)
nas <- data[!complete.cases(data), ]
nrow(nas)
means2 <- na.omit(lapply(splitdata, function(x) mean(x[,1])))
means2 <- data.frame(
date = rep(names(means2), lapply(means2, length)),
meanstep = unlist(means2))
means2
mean(mean2, na.rm = T)
mean(means2, na.rm = T)
mean(means2[,2], na.rm = T)
mean(data[,1], na.rm = T)
levels(data$date)
nas
mean(data[,1])
mean(data[,1], na.rm =T)
data <- read.csv("activity.csv", colClasses = c("interval"="numeric"))
splitdata <- split(data, data$date)
sums <- na.omit(lapply(splitdata, function(x) sum(x[,1])))
sums <- data.frame(
date = rep(names(sums), lapply(sums, length)),
totalsteps = unlist(sums))
qplot(as.Date(date), totalsteps, stat="identity", data = sums,
geom = "bar", xlab = "Date", ylab = "Total Steps")
mean(sums$totalsteps, na.rm = T)
median(sums$totalsteps, na.rm = T)
nas <- data[!complete.cases(data), ]
nrow(nas)
sum[is.na(sums)] = mean(data[,1], na.rm =T)
sums[is.na(sums)] = mean(data[,1], na.rm =T)
qplot(as.Date(date), totalsteps, stat="identity", data = sums,
geom = "bar", xlab = "Date", ylab = "Total Steps")
mean(sums$totalsteps, na.rm = T)
median(sums$totalsteps, na.rm = T)
data <- read.csv("activity.csv", colClasses = c("interval"="numeric"))
splitdata <- split(data, data$date)
sums <- na.omit(lapply(splitdata, function(x) sum(x[,1])))
sums <- data.frame(
date = rep(names(sums), lapply(sums, length)),
totalsteps = unlist(sums))
qplot(as.Date(date), totalsteps, stat="identity", data = sums,
geom = "bar", xlab = "Date", ylab = "Total Steps")
mean(sums$totalsteps, na.rm = T)
median(sums$totalsteps, na.rm = T)
?weekdays
weekdays(data$date)
splitdata <- split(data, data$date)
sums <- na.omit(lapply(splitdata, function(x) sum(x[,1])))
sums <- data.frame(stringAsFactors = F
date = rep(names(sums), lapply(sums, length)),
totalsteps = unlist(sums))
qplot(as.Date(date), totalsteps, stat="identity", data = sums,
geom = "bar", xlab = "Date", ylab = "Total Steps")
mean(sums$totalsteps, na.rm = T)
median(sums$totalsteps, na.rm = T)
data <- read.csv("activity.csv", colClasses = c("interval"="numeric"))
splitdata <- split(data, data$date)
sums <- na.omit(lapply(splitdata, function(x) sum(x[,1])))
sums <- data.frame(stringAsFactors = F,
date = rep(names(sums), lapply(sums, length)),
totalsteps = unlist(sums))
qplot(as.Date(date), totalsteps, stat="identity", data = sums,
geom = "bar", xlab = "Date", ylab = "Total Steps")
mean(sums$totalsteps, na.rm = T)
median(sums$totalsteps, na.rm = T)
sums[is.na(sums)] = mean(data[,1], na.rm =T)
intsplit <- split(data, data$interval)
means <- na.omit(lapply(intsplit, function(x) mean(x[,1], na.rm = T)))
means <- data.frame(stringsAsFactors = F, interval = rep(names(means), lapply(means, length)),
avesteps = unlist(means))
means
str(means)
L
data <- read.csv("activity.csv", colClasses = c("interval"="numeric"))
splitdata <- split(data, data$date)
sums <- na.omit(lapply(splitdata, function(x) sum(x[,1])))
sums <- data.frame(stringAsFactors = F,
date = rep(names(sums), lapply(sums, length)),
totalsteps = unlist(sums))
qplot(as.Date(date), totalsteps, stat="identity", data = sums,
geom = "bar", xlab = "Date", ylab = "Total Steps")
mean(sums$totalsteps, na.rm = T)
median(sums$totalsteps, na.rm = T)
intsplit <- split(data, data$interval)
means <- na.omit(lapply(intsplit, function(x) mean(x[,1], na.rm = T)))
means <- data.frame(stringsAsFactors = F, interval = rep(names(means), lapply(means, length)),
avesteps = unlist(means))
str(means)
means$interval <- as.numeric(mean$interval)
means$interval <- as.numeric(means$interval)
str(means)
ggplot(data = means, aes(x = interval, y = avesteps)) + geom_line() + xlab("Inveral")
+ ylab("Average Steps")
ggplot(data = means, aes(x = interval, y = avesteps)) + geom_line() + xlab("Inveral")
+ ylab("Average Steps")
ggplot(data = means, aes(x = interval, y = avesteps)) + geom_line() + xlab("Inveral") +
ylab("Average Steps")
ggplot(data = means, aes(x = interval, y = avesteps)) + geom_line() + xlab("Interval") +
ylab("Average Steps")
?max
means["steps"= max(means$steps), ]
means[("steps"= max(means$steps)), ]
means[("steps"= max(means$steps, na.rm = T)), ]
summary(means)
summary(data)
means[("avesteps"= max(means$avesteps), na.rm = T), ]
means[("avesteps"= max(means$avesteps, na.rm = T)), ]
means[("avesteps"= max(means$avesteps, na.rm = T)), ]
means
max(means$avesteps, na.rm = T)
max(means$avesteps, na.rm = T)
means[("avesteps"= max(means$avesteps, na.rm = T)), ]
means[("avesteps"= (max(means$avesteps, na.rm = T))), ]
means[("avesteps"== (max(means$avesteps, na.rm = T))), ]
means[("avesteps" = (max(means$avesteps, na.rm = T))), ]
means[(max(means$avesteps, na.rm = T)), ]
means[((max(means$avesteps, na.rm = T)) = means$avesteps), ]
means[(means$avesteps = (max(means$avesteps, na.rm = T)), ]
maxsteps <- max(means$avesteps, na.rm = T)
means[(means$avesteps = maxsteps), ]
means[(means$avesteps == maxsteps), ]
means[(means$avesteps = maxsteps), ]
data <- read.csv("activity.csv", colClasses = c("interval"="numeric"))
intsplit <- split(data, data$interval)
means <- na.omit(lapply(intsplit, function(x) mean(x[,1], na.rm = T)))
means <- data.frame(stringsAsFactors = F, interval = rep(names(means), lapply(means, length)),
avesteps = unlist(means))
means$interval <- as.numeric(means$interval)
maxsteps <- max(means$avesteps, na.rm = T)
means["avesteps" = maxsteps, ]
means
means[means$avesteps = maxsteps, ]
means[(means$avesteps = maxsteps), ]
means[, 2 = maxsteps]
means[(means$avesteps = 206.17),]
means[(means$avesteps = 0),]
means[(means$avesteps == 206.17),]
data <- read.csv("activity.csv", colClasses = c("interval"="numeric"))
intsplit <- split(data, data$interval)
means <- na.omit(lapply(intsplit, function(x) mean(x[,1], na.rm = T)))
means <- data.frame(stringsAsFactors = F, interval = rep(names(means), lapply(means, length)),
avesteps = unlist(means))
means$interval <- as.numeric(means$interval)
maxsteps <- max(means$avesteps, na.rm = T)
subset(means, avesteps==maxsteps)
str(data)
as.Date(data$date)
str(data)
nrow(data)
data$date[1, "date"]
data$date[1]
as.Date(data$date)
Day <- data.frame
for(i in 1:nrow(data)){
Dayval <- weekday(data$date[i])
Day <- rbind(Day, dayval)
}
for(i in 1:nrow(data)){
Dayval <- weekdays(data$date[i])
Day <- rbind(Day, dayval)
}
as.Date(data$date)
Day <- data.frame
for(i in 1:nrow(data)){
Dayval <- weekdays(data$date[i])
Day <- rbind(Day, dayval)
}
data <- read.csv("activity.csv", colClasses = c("interval"="numeric", "date" = "numeric"))
data <- read.csv("activity.csv", colClasses = c("interval"="numeric", "date" = "string"),
stringAsFactors = F)
data <- read.csv("activity.csv", stringAsFactors = F,
colClasses = c("interval"="numeric", "date" = "string"))
data <- read.csv("activity.csv", stringAsFactor=F,
colClasses = c("interval"="numeric", "date" = "string"))
data <- read.csv("activity.csv",
colClasses = c("interval"="numeric", "date" = "string"))
data <- read.csv("activity.csv",
colClasses = c("interval"="numeric", "date" = "character"))
str(data)
data <- read.csv("activity.csv",
colClasses = c("interval"="numeric", "date" = "character"))
splitdata <- split(data, data$date)
sums <- na.omit(lapply(splitdata, function(x) sum(x[,1])))
sums <- data.frame(stringAsFactors = F,
date = rep(names(sums), lapply(sums, length)),
totalsteps = unlist(sums))
qplot(as.Date(date), totalsteps, stat="identity", data = sums,
geom = "bar", xlab = "Date", ylab = "Total Steps")
mean(sums$totalsteps, na.rm = T)
median(sums$totalsteps, na.rm = T)
intsplit <- split(data, data$interval)
means <- na.omit(lapply(intsplit, function(x) mean(x[,1], na.rm = T)))
means <- data.frame(stringsAsFactors = F, interval = rep(names(means), lapply(means, length)),
avesteps = unlist(means))
means$interval <- as.numeric(means$interval)
ggplot(data = means, aes(x = interval, y = avesteps)) + geom_line() + xlab("Interval") +
ylab("Average Steps")
maxsteps <- max(means$avesteps, na.rm = T)
maxinterval <- subset(means, avesteps==maxsteps)
maxinterval
nas <- data[!complete.cases(data), ]
nrow(nas)
sums[is.na(sums)] = mean(data[,1], na.rm =T)
qplot(as.Date(date), totalsteps, stat="identity", data = sums,
geom = "bar", xlab = "Date", ylab = "Total Steps")
mean(sums$totalsteps, na.rm = T)
median(sums$totalsteps, na.rm = T)
as.Date(data$date)
Day <- data.frame
for(i in 1:nrow(data)){
Dayval <- weekdays(data$date[i])
Day <- rbind(Day, dayval)
}
as.Date(data$date)
data
str(data)
data$date <- as.Date(data$date)
str(data)
for(i in 1:nrow(data)){
Dayval <- weekdays(data$date[i])
Day <- rbind(Day, dayval)
}
Day <- data.frame
for(i in 1:nrow(data)){
dayval <- weekdays(data$date[i])
Day <- rbind(Day, dayval)
}
Day <- data.frame()
for(i in 1:nrow(data)){
dayval <- weekdays(data$date[i])
Day <- rbind(Day, dayval)
}
head(Day)
colnames(Day) <- "Day"
Str(Day)
str(Day)
warnings()
Dow <- data.frame(Day = Factor)
levels(Dow$Day) = c("Monday", "Tuesday", "Wednesday", "Thursday",
"Friday", "Saturday", "Sunday")
str(data)
Dow <- data.frame(Day = "character")
levels(Dow$Day) = c("Monday", "Tuesday", "Wednesday", "Thursday",
"Friday", "Saturday", "Sunday")
for(i in 1:nrow(data)){
dayval <- weekdays(data$date[i])
Dow <- rbind(Dow, dayval)
}
str(Dow)
POW <- data.frame(Part = "character")
levels(Pow$Part) = c("weekday", "weekend")
for(i in 1:nrow(data)){
Powval <- weekdays(Dow[i])
if(Powval == "Monday" | "Tuesday" | "Wednesday" | "Thursday" |
"Friday"){
Pow <- rbind(Pow, "weekday")
}
if(Powval == "Saturday" | "Sunday"){
Pow <- rbind(Pow, "weekend")
}
}
POW <- data.frame(Part = "character")
levels(Pow$Part) = c("weekday", "weekend")
for(i in 1:nrow(data)){
Powval <- Dow[i]
if(Powval == "Monday" | "Tuesday" | "Wednesday" | "Thursday" |
"Friday"){
Pow <- rbind(Pow, "weekday")
}
if(Powval == "Saturday" | "Sunday"){
Pow <- rbind(Pow, "weekend")
}
}
for(i in 1:nrow(data)){
Powval <- Dow[i]
if(Powval == "Monday" | Powval == "Tuesday" | Powval == "Wednesday" |
Powval == "Thursday" | Powval == "Friday"){
Pow <- rbind(Pow, "weekday")
}
if(Powval == "Saturday" | Powval == "Sunday"){
Pow <- rbind(Pow, "weekend")
}
}
POW <- data.frame(Part = "character")
levels(Pow$Part) = c("weekday", "weekend")
for(i in 1:nrow(data)){
Powval <- Dow[i]
if((Powval == "Monday") | (Powval == "Tuesday") | (Powval == "Wednesday") |
(Powval == "Thursday") | (Powval == "Friday"){
Pow <- rbind(Pow, "weekday")
}
if((Powval == "Saturday") | (Powval == "Sunday")){
Pow <- rbind(Pow, "weekend")
}
}
for(i in 1:nrow(data)){
Powval <- Dow[i]
if(Powval == "Monday"){
Pow <- rbind(Pow, "weekday")
}
if(Powval == "Tuesday"){
Pow <- rbind(Pow, "weekday")
}
if(Powval == "Wednesday"){
Pow <- rbind(Pow, "weekday")
}
if(Powval == "Thursday"){
Pow <- rbind(Pow, "weekday")
}
if(Powval == "Friday"){
Pow <- rbind(Pow, "weekday")
}
if(Powval == "Saturday"){
Pow <- rbind(Pow, "weekend")
}
if(Powval == "Sunday"){
Pow <- rbind(Pow, "weekend")
}
}
Pow <- data.frame(Part = "character")
levels(Pow$Part) = c("weekday", "weekend")
for(i in 1:nrow(data)){
Powval <- Dow[i]
if(Powval == "Monday"){
Pow <- rbind(Pow, "weekday")
}
if(Powval == "Tuesday"){
Pow <- rbind(Pow, "weekday")
}
if(Powval == "Wednesday"){
Pow <- rbind(Pow, "weekday")
}
if(Powval == "Thursday"){
Pow <- rbind(Pow, "weekday")
}
if(Powval == "Friday"){
Pow <- rbind(Pow, "weekday")
}
if(Powval == "Saturday"){
Pow <- rbind(Pow, "weekend")
}
if(Powval == "Sunday"){
Pow <- rbind(Pow, "weekend")
}
}
for(i in 1:nrow(data)){
Powval <- Dow[i,1]
if(Powval == "Monday"){
Pow <- rbind(Pow, "weekday")
}
if(Powval == "Tuesday"){
Pow <- rbind(Pow, "weekday")
}
if(Powval == "Wednesday"){
Pow <- rbind(Pow, "weekday")
}
if(Powval == "Thursday"){
Pow <- rbind(Pow, "weekday")
}
if(Powval == "Friday"){
Pow <- rbind(Pow, "weekday")
}
if(Powval == "Saturday"){
Pow <- rbind(Pow, "weekend")
}
if(Powval == "Sunday"){
Pow <- rbind(Pow, "weekend")
}
}
str(Pow)
setwd("~/R/RFiles/5RepResearch/project1")
datadays <- cbind(data, Pow)
nrow(data)
nrow(datadays)
nrow(Pow)
nrow(Dow)
head(Pow)
Pow(header = T)
data$date <- as.Date(data$date, header=T)
Dow <- data.frame(Day = "character")
levels(Dow$Day) = c("Monday", "Tuesday", "Wednesday", "Thursday",
"Friday", "Saturday", "Sunday")
for(i in 1:nrow(data)){
dayval <- weekdays(data$date[i])
Dow <- rbind(Dow, dayval)
}
Pow <- data.frame(Part = "character", header = T)
levels(Pow$Part) = c("weekday", "weekend")
for(i in 1:nrow(data)){
Powval <- Dow[i,1]
if(Powval == "Monday"){
Pow <- rbind(Pow, "weekday")
}
if(Powval == "Tuesday"){
Pow <- rbind(Pow, "weekday")
}
if(Powval == "Wednesday"){
Pow <- rbind(Pow, "weekday")
}
if(Powval == "Thursday"){
Pow <- rbind(Pow, "weekday")
}
if(Powval == "Friday"){
Pow <- rbind(Pow, "weekday")
}
if(Powval == "Saturday"){
Pow <- rbind(Pow, "weekend")
}
if(Powval == "Sunday"){
Pow <- rbind(Pow, "weekend")
}
}
datadays <- cbind(data, Pow)
head(Dow)
head(Pow)
length(Dow)
nrow(Dow)
data <- read.csv("activity.csv",
colClasses = c("interval"="numeric", "date" = "character"))
splitdata <- split(data, data$date)
sums <- na.omit(lapply(splitdata, function(x) sum(x[,1])))
sums <- data.frame(stringAsFactors = F,
date = rep(names(sums), lapply(sums, length)),
totalsteps = unlist(sums))
qplot(as.Date(date), totalsteps, stat="identity", data = sums,
geom = "bar", xlab = "Date", ylab = "Total Steps")
mean(sums$totalsteps, na.rm = T)
median(sums$totalsteps, na.rm = T)
##part2
intsplit <- split(data, data$interval)
means <- na.omit(lapply(intsplit, function(x) mean(x[,1], na.rm = T)))
means <- data.frame(stringsAsFactors = F, interval = rep(names(means), lapply(means, length)),
avesteps = unlist(means))
means$interval <- as.numeric(means$interval)
ggplot(data = means, aes(x = interval, y = avesteps)) + geom_line() + xlab("Interval") +
ylab("Average Steps")
maxsteps <- max(means$avesteps, na.rm = T)
maxinterval <- subset(means, avesteps==maxsteps)
maxinterval
##part3 - na's changed to average number of steps over entire period
nas <- data[!complete.cases(data), ]
nrow(nas)
sums[is.na(sums)] = mean(data[,1], na.rm =T)
qplot(as.Date(date), totalsteps, stat="identity", data = sums,
geom = "bar", xlab = "Date", ylab = "Total Steps")
mean(sums$totalsteps, na.rm = T)
median(sums$totalsteps, na.rm = T)
##part4
data$date <- as.Date(data$date, header = T)
Dow <- data.frame(Day = "character")
levels(Dow$Day) = c("Monday", "Tuesday", "Wednesday", "Thursday",
"Friday", "Saturday", "Sunday")
for(i in 1:nrow(data)){
dayval <- weekdays(data$date[i])
Dow <- rbind(Dow, dayval)
}
Pow <- data.frame(Part = "character", header = T)
levels(Pow$Part) = c("weekday", "weekend")
for(i in 1:nrow(data)){
Powval <- Dow[i,1]
if(Powval == "Monday"){
Pow <- rbind(Pow, "weekday")
}
if(Powval == "Tuesday"){
Pow <- rbind(Pow, "weekday")
}
if(Powval == "Wednesday"){
Pow <- rbind(Pow, "weekday")
}
if(Powval == "Thursday"){
Pow <- rbind(Pow, "weekday")
}
if(Powval == "Friday"){
Pow <- rbind(Pow, "weekday")
}
if(Powval == "Saturday"){
Pow <- rbind(Pow, "weekend")
}
if(Powval == "Sunday"){
Pow <- rbind(Pow, "weekend")
}
}
datadays <- cbind(data, Pow)
